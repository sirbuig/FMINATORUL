@model FMInatorul.Models.Room

<div class="container mt-4">
    <h2 class="text-white text-center">Welcome to Room @Model.Code</h2>
    <div id="participantsContainer" class="card bg-dark text-white mt-3">
        <div class="card-header">
            <h5>Participants</h5>
        </div>
        <ul id="participantsList" class="list-group list-group-flush">
            @foreach (var participant in Model.Participants)
            {
                var firstName = participant.Student?.ApplicationUser?.FirstName;
                var lastName = participant.Student?.ApplicationUser?.LastName;
                <li class="list-group-item bg-dark text-white">
                    <span class="fw-bold">Student:</span> @firstName @lastName
                </li>
            }
        </ul>
    </div>

    <button id="exitLobbyBtn" class="btn btn-danger mt-3 w-100">Exit Lobby</button>
</div>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        // start connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/roomHub")
            .build();

        connection.start().then(async () => {
            console.log("SignalR connected in Lobby.");
            // join signalR
            const code = "@Model.Code";
            await connection.invoke("JoinRoomGroup", code);
        }).catch(err => console.error(err));

        // UserJoined
        connection.on("UserJoined", (userName) => {
            console.log("UserJoined event from server:", userName);
            const participantsList = document.getElementById("participantsList");
            const li = document.createElement("li");
            li.className = "list-group-item bg-dark text-white";

            const labelNode = document.createElement("span");
            labelNode.className = "fw-bold";
            labelNode.textContent = "Student: ";

            const userNameNode = document.createTextNode(userName);

            li.appendChild(labelNode);
            li.appendChild(userNameNode);

            participantsList.appendChild(li);
        });


        // "UserLeft"
        connection.on("UserLeft", (userName) => {
            console.log("UserLeft event from server:", userName);

            const participantsList = document.getElementById("participantsList");
            if (!participantsList) return;

            const listItems = participantsList.querySelectorAll("li");
            for (const li of listItems) {
                if (li.textContent.includes(userName)) {
                    participantsList.removeChild(li);
                    break;
                }
            }
        });

        // Exit
        document.getElementById("exitLobbyBtn").addEventListener("click", async () => {
            const code = "@Model.Code";

            const response = await fetch('/Rooms/LeaveRoom', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(code)
            });

            const data = await response.json();
            if (data.success) {
                await connection.invoke("LeaveRoomGroup", code);
                window.location.href = '/Students/Index';
            }
            else {
                alert(data.message);
            }
        });
    </script>
}
